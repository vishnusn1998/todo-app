{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["storeKey","useStyles","makeStyles","root","title","fontSize","textAlign","justifyContent","textTransform","pos","marginBottom","App","classes","useState","todos","setTodos","todo","setTodo","useEffect","store","get","set","handleAdd","e","i","preventDefault","console","log","alert","id","Date","now","text","status","className","onSubmit","onKeyPress","keycode","style","fontFamily","value","onChange","target","type","placeholder","border","backgroundColor","marginRight","Card","CardContent","Typography","color","gutterBottom","map","obj","index","name","checked","filter","obj2","marginTop","onClick","window","confirm","test","splice","deleteTask","Divider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acd6b29b.chunk.js","sourcesContent":["import './App.css';\r\nimport {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport store from \"store\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst storeKey = \"ToDo-App-Key\"\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \r\n  },\r\n \r\n  title: {\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform:\"uppercase\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [todos, setTodos] = useState([]);\r\n  const [todo, setTodo] = useState('');\r\n\r\n  \r\n  useEffect(() => {\r\n    if(typeof store.get(storeKey) !== \"undefined\"){\r\n      setTodos(store.get(storeKey).todos);\r\n    \r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    store.set(storeKey, { todos: todos})\r\n  }, [todos]);\r\n\r\n\r\n  const resetField = ()=> {\r\n    setTodo(\"\")\r\n  }\r\n\r\n  const deleteTask = (index)=> {\r\n\r\n    var ask = window.confirm(\"Do you want to delete the task?\");\r\n    if (ask) {\r\n      const test = [...todos];\r\n        test.splice(index, 1);\r\n\r\n        setTodos(test)\r\n    }else {\r\n      console.log(\"Don't delete\");\r\n    }\r\n\r\n   \r\n  }\r\n\r\n\r\n  const handleAdd = (e,i) => {\r\n\r\n    e.preventDefault();\r\n   \r\n    if(todo === \"\"){\r\n      console.log(\"err\")\r\n      alert(\"Field empty!\")\r\n    }else{\r\n      setTodos([...todos,{id:Date.now(), text:todo, status:false}]);\r\n      resetField();\r\n    }\r\n   \r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"mainHeading\">\r\n        <h1>ToDo App by Vishnu</h1>\r\n      </div>\r\n      <div className=\"subHeading\">\r\n        <br />\r\n        <h2>Never be late again !</h2>\r\n      </div>\r\n      <br></br>\r\n      <form onSubmit={handleAdd}>\r\n      <div className=\"input\">\r\n        <input onKeyPress={(e)=>{\r\n          if(e.keycode === 13){\r\n            handleAdd();\r\n          }\r\n        }} style={{fontFamily:\"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\", textTransform: \"uppercase\"}} value={todo} onChange={(e)=>{setTodo(e.target.value)}} type=\"text\" placeholder=\"  ADD ITEM\" />\r\n       <button style={{border:\"none\", backgroundColor:\"white\"}} type=\"submit\"><i style={{fontSize:\"22px\", marginRight:\"0.9rem\"}} className=\"fas fa-plus\" ></i></button> \r\n      </div></form>\r\n     <br></br>\r\n          <div className=\"todos\">\r\n      <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n        All tasks\r\n        </Typography>\r\n        <br></br>\r\n        {\r\n       \r\n       todos.map((obj, index)=> {\r\n         return(\r\n        <div className=\"todo\">\r\n          \r\n            <div className=\"right\">\r\n            <p className=\"content\">{index + 1}. {obj.text}</p>\r\n            <div className=\"buttons\">\r\n            <input type=\"checkbox\" name=\"\" id=\"\" value={obj.status} onChange={(e)=>{\r\n                console.log(e.target.checked)\r\n                console.log(obj)\r\n                setTodos(todos.filter(obj2=>{\r\n                  if (obj2.id === obj.id){\r\n                    obj2.status = e.target.checked\r\n                  }\r\n                  return obj2\r\n                }))\r\n              }} />\r\n              \r\n              \r\n              <i style={{marginTop:\"-2px\", fontSize: \"16px\"}} onClick={()=>deleteTask(index)}\r\n              // onClick={(e, i)=>{\r\n              //   var test = [...todos]\r\n              //   const {id} = e.target.parentElement\r\n               \r\n              //     test.splice(id, i);\r\n              //     setTodos(test)\r\n               \r\n              // }} \r\n              className=\"fas fa-trash\"></i>\r\n              \r\n              </div>\r\n              \r\n            </div>\r\n            <Divider/>\r\n            <br></br>\r\n          </div>\r\n            )\r\n    \r\n          })  \r\n         \r\n          }\r\n          \r\n      </CardContent>\r\n    \r\n    </Card>\r\n         \r\n        </div>\r\n        <br></br>\r\n\r\n        <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n        Tasks done\r\n        </Typography>\r\n        <br></br>\r\n      \r\n      {todos.map((obj, index)=> {\r\n     \r\n          \r\n          if(obj.status){\r\n          return(\r\n            <>\r\n            <div className=\"done\">\r\n           \r\n            <p className=\"content\">{index + 1}. {obj.text}</p>\r\n            </div>\r\n            <Divider/>\r\n            <br></br>\r\n            </>\r\n          )\r\n            \r\n         \r\n          }\r\n         \r\n          return null\r\n    \r\n      })}\r\n         </CardContent>\r\n    \r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}