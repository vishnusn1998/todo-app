{"ast":null,"code":"// memoryStorage is a useful last fallback to ensure that the store\n// is functions (meaning store.get(), store.set(), etc will all function).\n// However, stored values will not persist when the browser navigates to\n// a new page or reloads the current page.\nmodule.exports = {\n  name: 'memoryStorage',\n  read: read,\n  write: write,\n  each: each,\n  remove: remove,\n  clearAll: clearAll\n};\nvar memoryStorage = {};\n\nfunction read(key) {\n  return memoryStorage[key];\n}\n\nfunction write(key, data) {\n  memoryStorage[key] = data;\n}\n\nfunction each(callback) {\n  for (var key in memoryStorage) {\n    if (memoryStorage.hasOwnProperty(key)) {\n      callback(memoryStorage[key], key);\n    }\n  }\n}\n\nfunction remove(key) {\n  delete memoryStorage[key];\n}\n\nfunction clearAll(key) {\n  memoryStorage = {};\n}","map":{"version":3,"sources":["E:/Todo app/todo-app/node_modules/store/storages/memoryStorage.js"],"names":["module","exports","name","read","write","each","remove","clearAll","memoryStorage","key","data","callback","hasOwnProperty"],"mappings":"AAAA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiB;AAChBC,EAAAA,IAAI,EAAE,eADU;AAEhBC,EAAAA,IAAI,EAAEA,IAFU;AAGhBC,EAAAA,KAAK,EAAEA,KAHS;AAIhBC,EAAAA,IAAI,EAAEA,IAJU;AAKhBC,EAAAA,MAAM,EAAEA,MALQ;AAMhBC,EAAAA,QAAQ,EAAEA;AANM,CAAjB;AASA,IAAIC,aAAa,GAAG,EAApB;;AAEA,SAASL,IAAT,CAAcM,GAAd,EAAmB;AAClB,SAAOD,aAAa,CAACC,GAAD,CAApB;AACA;;AAED,SAASL,KAAT,CAAeK,GAAf,EAAoBC,IAApB,EAA0B;AACzBF,EAAAA,aAAa,CAACC,GAAD,CAAb,GAAqBC,IAArB;AACA;;AAED,SAASL,IAAT,CAAcM,QAAd,EAAwB;AACvB,OAAK,IAAIF,GAAT,IAAgBD,aAAhB,EAA+B;AAC9B,QAAIA,aAAa,CAACI,cAAd,CAA6BH,GAA7B,CAAJ,EAAuC;AACtCE,MAAAA,QAAQ,CAACH,aAAa,CAACC,GAAD,CAAd,EAAqBA,GAArB,CAAR;AACA;AACD;AACD;;AAED,SAASH,MAAT,CAAgBG,GAAhB,EAAqB;AACpB,SAAOD,aAAa,CAACC,GAAD,CAApB;AACA;;AAED,SAASF,QAAT,CAAkBE,GAAlB,EAAuB;AACtBD,EAAAA,aAAa,GAAG,EAAhB;AACA","sourcesContent":["// memoryStorage is a useful last fallback to ensure that the store\n// is functions (meaning store.get(), store.set(), etc will all function).\n// However, stored values will not persist when the browser navigates to\n// a new page or reloads the current page.\n\nmodule.exports = {\n\tname: 'memoryStorage',\n\tread: read,\n\twrite: write,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll,\n}\n\nvar memoryStorage = {}\n\nfunction read(key) {\n\treturn memoryStorage[key]\n}\n\nfunction write(key, data) {\n\tmemoryStorage[key] = data\n}\n\nfunction each(callback) {\n\tfor (var key in memoryStorage) {\n\t\tif (memoryStorage.hasOwnProperty(key)) {\n\t\t\tcallback(memoryStorage[key], key)\n\t\t}\n\t}\n}\n\nfunction remove(key) {\n\tdelete memoryStorage[key]\n}\n\nfunction clearAll(key) {\n\tmemoryStorage = {}\n}\n"]},"metadata":{},"sourceType":"script"}