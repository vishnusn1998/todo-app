{"ast":null,"code":"// cookieStorage is useful Safari private browser mode, where localStorage\n// doesn't work but cookies do. This implementation is adopted from\n// https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage\nvar util = require('../src/util');\n\nvar Global = util.Global;\nvar trim = util.trim;\nmodule.exports = {\n  name: 'cookieStorage',\n  read: read,\n  write: write,\n  each: each,\n  remove: remove,\n  clearAll: clearAll\n};\nvar doc = Global.document;\n\nfunction read(key) {\n  if (!key || !_has(key)) {\n    return null;\n  }\n\n  var regexpStr = \"(?:^|.*;\\\\s*)\" + escape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\";\n  return unescape(doc.cookie.replace(new RegExp(regexpStr), \"$1\"));\n}\n\nfunction each(callback) {\n  var cookies = doc.cookie.split(/; ?/g);\n\n  for (var i = cookies.length - 1; i >= 0; i--) {\n    if (!trim(cookies[i])) {\n      continue;\n    }\n\n    var kvp = cookies[i].split('=');\n    var key = unescape(kvp[0]);\n    var val = unescape(kvp[1]);\n    callback(val, key);\n  }\n}\n\nfunction write(key, data) {\n  if (!key) {\n    return;\n  }\n\n  doc.cookie = escape(key) + \"=\" + escape(data) + \"; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/\";\n}\n\nfunction remove(key) {\n  if (!key || !_has(key)) {\n    return;\n  }\n\n  doc.cookie = escape(key) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n}\n\nfunction clearAll() {\n  each(function (_, key) {\n    remove(key);\n  });\n}\n\nfunction _has(key) {\n  return new RegExp(\"(?:^|;\\\\s*)\" + escape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\").test(doc.cookie);\n}","map":{"version":3,"sources":["E:/Todo app/todo-app/node_modules/store/storages/cookieStorage.js"],"names":["util","require","Global","trim","module","exports","name","read","write","each","remove","clearAll","doc","document","key","_has","regexpStr","escape","replace","unescape","cookie","RegExp","callback","cookies","split","i","length","kvp","val","data","_","test"],"mappings":"AAAA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGF,IAAI,CAACE,MAAlB;AACA,IAAIC,IAAI,GAAGH,IAAI,CAACG,IAAhB;AAEAC,MAAM,CAACC,OAAP,GAAiB;AAChBC,EAAAA,IAAI,EAAE,eADU;AAEhBC,EAAAA,IAAI,EAAEA,IAFU;AAGhBC,EAAAA,KAAK,EAAEA,KAHS;AAIhBC,EAAAA,IAAI,EAAEA,IAJU;AAKhBC,EAAAA,MAAM,EAAEA,MALQ;AAMhBC,EAAAA,QAAQ,EAAEA;AANM,CAAjB;AASA,IAAIC,GAAG,GAAGV,MAAM,CAACW,QAAjB;;AAEA,SAASN,IAAT,CAAcO,GAAd,EAAmB;AAClB,MAAI,CAACA,GAAD,IAAQ,CAACC,IAAI,CAACD,GAAD,CAAjB,EAAwB;AAAE,WAAO,IAAP;AAAa;;AACvC,MAAIE,SAAS,GAAG,kBACfC,MAAM,CAACH,GAAD,CAAN,CAAYI,OAAZ,CAAoB,aAApB,EAAmC,MAAnC,CADe,GAEf,oCAFD;AAGA,SAAOC,QAAQ,CAACP,GAAG,CAACQ,MAAJ,CAAWF,OAAX,CAAmB,IAAIG,MAAJ,CAAWL,SAAX,CAAnB,EAA0C,IAA1C,CAAD,CAAf;AACA;;AAED,SAASP,IAAT,CAAca,QAAd,EAAwB;AACvB,MAAIC,OAAO,GAAGX,GAAG,CAACQ,MAAJ,CAAWI,KAAX,CAAiB,MAAjB,CAAd;;AACA,OAAK,IAAIC,CAAC,GAAGF,OAAO,CAACG,MAAR,GAAiB,CAA9B,EAAiCD,CAAC,IAAI,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;AAC7C,QAAI,CAACtB,IAAI,CAACoB,OAAO,CAACE,CAAD,CAAR,CAAT,EAAuB;AACtB;AACA;;AACD,QAAIE,GAAG,GAAGJ,OAAO,CAACE,CAAD,CAAP,CAAWD,KAAX,CAAiB,GAAjB,CAAV;AACA,QAAIV,GAAG,GAAGK,QAAQ,CAACQ,GAAG,CAAC,CAAD,CAAJ,CAAlB;AACA,QAAIC,GAAG,GAAGT,QAAQ,CAACQ,GAAG,CAAC,CAAD,CAAJ,CAAlB;AACAL,IAAAA,QAAQ,CAACM,GAAD,EAAMd,GAAN,CAAR;AACA;AACD;;AAED,SAASN,KAAT,CAAeM,GAAf,EAAoBe,IAApB,EAA0B;AACzB,MAAG,CAACf,GAAJ,EAAS;AAAE;AAAQ;;AACnBF,EAAAA,GAAG,CAACQ,MAAJ,GAAaH,MAAM,CAACH,GAAD,CAAN,GAAc,GAAd,GAAoBG,MAAM,CAACY,IAAD,CAA1B,GAAmC,iDAAhD;AACA;;AAED,SAASnB,MAAT,CAAgBI,GAAhB,EAAqB;AACpB,MAAI,CAACA,GAAD,IAAQ,CAACC,IAAI,CAACD,GAAD,CAAjB,EAAwB;AACvB;AACA;;AACDF,EAAAA,GAAG,CAACQ,MAAJ,GAAaH,MAAM,CAACH,GAAD,CAAN,GAAc,kDAA3B;AACA;;AAED,SAASH,QAAT,GAAoB;AACnBF,EAAAA,IAAI,CAAC,UAASqB,CAAT,EAAYhB,GAAZ,EAAiB;AACrBJ,IAAAA,MAAM,CAACI,GAAD,CAAN;AACA,GAFG,CAAJ;AAGA;;AAED,SAASC,IAAT,CAAcD,GAAd,EAAmB;AAClB,SAAQ,IAAIO,MAAJ,CAAW,gBAAgBJ,MAAM,CAACH,GAAD,CAAN,CAAYI,OAAZ,CAAoB,aAApB,EAAmC,MAAnC,CAAhB,GAA6D,SAAxE,CAAD,CAAqFa,IAArF,CAA0FnB,GAAG,CAACQ,MAA9F,CAAP;AACA","sourcesContent":["// cookieStorage is useful Safari private browser mode, where localStorage\n// doesn't work but cookies do. This implementation is adopted from\n// https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage\n\nvar util = require('../src/util')\nvar Global = util.Global\nvar trim = util.trim\n\nmodule.exports = {\n\tname: 'cookieStorage',\n\tread: read,\n\twrite: write,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll,\n}\n\nvar doc = Global.document\n\nfunction read(key) {\n\tif (!key || !_has(key)) { return null }\n\tvar regexpStr = \"(?:^|.*;\\\\s*)\" +\n\t\tescape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") +\n\t\t\"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"\n\treturn unescape(doc.cookie.replace(new RegExp(regexpStr), \"$1\"))\n}\n\nfunction each(callback) {\n\tvar cookies = doc.cookie.split(/; ?/g)\n\tfor (var i = cookies.length - 1; i >= 0; i--) {\n\t\tif (!trim(cookies[i])) {\n\t\t\tcontinue\n\t\t}\n\t\tvar kvp = cookies[i].split('=')\n\t\tvar key = unescape(kvp[0])\n\t\tvar val = unescape(kvp[1])\n\t\tcallback(val, key)\n\t}\n}\n\nfunction write(key, data) {\n\tif(!key) { return }\n\tdoc.cookie = escape(key) + \"=\" + escape(data) + \"; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/\"\n}\n\nfunction remove(key) {\n\tif (!key || !_has(key)) {\n\t\treturn\n\t}\n\tdoc.cookie = escape(key) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\"\n}\n\nfunction clearAll() {\n\teach(function(_, key) {\n\t\tremove(key)\n\t})\n}\n\nfunction _has(key) {\n\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(doc.cookie)\n}\n"]},"metadata":{},"sourceType":"script"}