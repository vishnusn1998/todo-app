{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["storeKey","useStyles","makeStyles","root","title","fontSize","textAlign","justifyContent","textTransform","pos","marginBottom","App","classes","useState","todos","setTodos","todo","setTodo","useEffect","store","get","set","className","style","fontFamily","value","onChange","e","target","type","placeholder","marginRight","onClick","i","console","log","alert","id","Date","now","text","status","Card","CardContent","Typography","color","gutterBottom","map","obj","index","name","checked","filter","obj2","marginTop","window","confirm","test","splice","deleteTask","Divider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da8600e9.chunk.js","sourcesContent":["import './App.css';\nimport {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n\nimport CardContent from '@material-ui/core/CardContent';\nimport store from \"store\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nconst storeKey = \"ToDo-App-Key\"\nconst useStyles = makeStyles({\n  root: {\n    \n  },\n \n  title: {\n    fontSize: 14,\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    textTransform:\"uppercase\"\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState('');\n\n  \n  useEffect(() => {\n    if(typeof store.get(storeKey) !== \"undefined\"){\n      setTodos(store.get(storeKey).todos);\n    \n    }\n  }, []);\n\n  useEffect(() => {\n    store.set(storeKey, { todos: todos})\n  }, [todos]);\n\n\n  const resetField = ()=> {\n    setTodo(\"\")\n  }\n\n  const deleteTask = (index)=> {\n\n    var ask = window.confirm(\"Do you want to delete the task?\");\n    if (ask) {\n      const test = [...todos];\n        test.splice(index, 1);\n\n        setTodos(test)\n    }else {\n      console.log(\"Don't delete\");\n    }\n\n   \n  }\n\n\n  const handleAdd = (i) => {\n\n   \n    if(todo === \"\"){\n      console.log(\"err\")\n      alert(\"Field empty!\")\n    }else{\n      setTodos([...todos,{id:Date.now(), text:todo, status:false}]);\n      resetField();\n    }\n   \n  }\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"mainHeading\">\n        <h1>ToDo App by Vishnu</h1>\n      </div>\n      <div className=\"subHeading\">\n        <br />\n        <h2>Never be late again !</h2>\n      </div>\n      <br></br>\n      <div className=\"input\">\n        <input style={{fontFamily:\"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\", textTransform: \"uppercase\"}} value={todo} onChange={(e)=>{setTodo(e.target.value)}} type=\"text\" placeholder=\"  ADD ITEM\" />\n        <i style={{marginRight:\"0.9rem\"}} onClick={handleAdd} className=\"fas fa-plus\" ></i>\n      </div>\n     <br></br>\n          <div className=\"todos\">\n      <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        All tasks\n        </Typography>\n        <br></br>\n        {\n       \n       todos.map((obj, index)=> {\n         return(\n        <div className=\"todo\">\n          \n            <div className=\"right\">\n            <p className=\"content\">{index + 1}. {obj.text}</p>\n            <div className=\"buttons\">\n            <input type=\"checkbox\" name=\"\" id=\"\" value={obj.status} onChange={(e)=>{\n                console.log(e.target.checked)\n                console.log(obj)\n                setTodos(todos.filter(obj2=>{\n                  if (obj2.id === obj.id){\n                    obj2.status = e.target.checked\n                  }\n                  return obj2\n                }))\n              }} />\n              \n              \n              <i style={{marginTop:\"-2px\", fontSize: \"16px\"}} onClick={()=>deleteTask(index)}\n              // onClick={(e, i)=>{\n              //   var test = [...todos]\n              //   const {id} = e.target.parentElement\n               \n              //     test.splice(id, i);\n              //     setTodos(test)\n               \n              // }} \n              className=\"fas fa-trash\"></i>\n              \n              </div>\n              \n            </div>\n            <Divider/>\n            <br></br>\n          </div>\n            )\n    \n          })  \n         \n          }\n          \n      </CardContent>\n    \n    </Card>\n         \n        </div>\n        <br></br>\n\n        <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        Tasks done\n        </Typography>\n        <br></br>\n      \n      {todos.map((obj, index)=> {\n     \n          \n          if(obj.status){\n          return(\n            <>\n            <div className=\"done\">\n           \n            <p className=\"content\">{index + 1}. {obj.text}</p>\n            </div>\n            <Divider/>\n            <br></br>\n            </>\n          )\n            \n         \n          }\n         \n          return null\n    \n      })}\n         </CardContent>\n    \n    </Card>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}